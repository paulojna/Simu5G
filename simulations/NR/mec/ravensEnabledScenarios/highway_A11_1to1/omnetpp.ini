# General Configurations
[General]
image-path=../../../images
output-scalar-file-append = false
**.routingRecorder.enabled = false

cmdenv-express-mode = false
cmdenv-autoflush = true
cmdenv-redirect-output = true

#**.car[*].app[0].cmdenv-log-level = trace
#**.car[*].app[1].cmdenv-log-level = trace
#**.car[4].**.cmdenv-log-level = trace
#**.vim*.cmdenv-log-level = trace
#**.server.app[0].cmdenv-log-level = trace
#**.mecHost*.independentMecApp[0].cmdenv-log-level = trace
#**.mecHost*.**.cmdenv-log-level = trace
#**.ualcmp.**.cmdenv-log-level = trace
#**.mecOrchestrator.cmdenv-log-level = trace
#**.upf.**.cmdenv-log-level = trace
#**.centralUpf.**.cmdenv-log-level = trace
#**.iUpf*.**.cmdenv-log-level = trace
#**.gnb3.**.cmdenv-log-level = trace
**.cmdenv-log-level = off

#print-undisposed = false

############### Statistics ##################
#output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
#output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec

repeat = 1
seed-set = ${repetition}
num-rngs = 5
#**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
#**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP

**.car[*].app[1].**.vector-recording = true
**.mecHost*.vim.**.vector-recording = true
**.vector-recording = false
**.scalar-recording = false

############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2**.sctp.enableHeartbeats = false

# Size of the simulation area
**.playgroundSizeX = 9215.08m
**.playgroundSizeY = 6408.06m
**.playgroundSizeZ = 0m

# Network
network = simu5g.simulations.NR.mec.ravensEnabledScenarios.highway_A11_1to1.highwayA11_1to1

# General PHY parameters
**.downlink_interference = true
**.uplink_interference = true 
**.ueTxPower = 26dBm
**.eNodeBTxPower = 46dBm
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 40tti   # reports CQI every 40ms

**.nodeb_height = 23m
**.ue_height = 1m
**.bs_noise_figure = 5dBm
**.cable_loss = 2dB
**.antennGainEnB = 17dBi
**.fixed_los = true

# IPv4 configuration

*.configurator.config = xmldoc("./highwayA11_1to1.xml")
# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)

warmup-period = 0s
sim-time-limit = 3600s

# VeinsManager parameters
*.veinsManager.host = "localhost"
*.veinsManager.moduleType = "simu5g.nodes.cars.NRCar"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("highwayA11_1to1.launchd.xml")
*.veinsManager.updateInterval = 0.1s

# Mobility parameters
*.car[*].mobility.typename = "VeinsInetMobility"
*.car[*].masterId = 0     # ignored if dynamic association is disabled
*.car[*].macCellId = 0    # ignored if dynamic association is disabled
*.car[*].nrMasterId = 1     # ignored if dynamic association is disabled
*.car[*].nrMacCellId = 1    # ignored if dynamic association is disabled

**.scenario = "RURAL_MACROCELL"
**.tolerateMaxDistViolation = true

# CA configuration
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=50}
**.cellularNic.LteChannelModelType = "NRChannelModel_3GPP38_901"

*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0

*.car[*].cellularNic.numCarriers = 1
*.car[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

# X2 Configurations
*.gnb1.numX2Apps = 1
*.gnb2.numX2Apps = 2
*.gnb3.numX2Apps = 2
*.gnb4.numX2Apps = 2
*.gnb5.numX2Apps = 2
*.gnb6.numX2Apps = 1

# one x2App per peering node
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)

*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0"
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb2.x2App[1].client.connectAddress = "gnb3%x2ppp0"
*.gnb3.x2App[0].client.connectAddress = "gnb2%x2ppp0"
*.gnb3.x2App[1].client.connectAddress = "gnb4%x2ppp0"
*.gnb4.x2App[0].client.connectAddress = "gnb3%x2ppp0"
*.gnb4.x2App[1].client.connectAddress = "gnb5%x2ppp0"
*.gnb5.x2App[0].client.connectAddress = "gnb4%x2ppp0"
*.gnb5.x2App[1].client.connectAddress = "gnb6%x2ppp0"
*.gnb6.x2App[0].client.connectAddress = "gnb5%x2ppp0"

**.dynamicCellAssociation = true
**.enableHandover = true

# MEC Configurations

# MEC Hosts
**.mecHost*.virtualisationInfrastructure.ipv4.forwarding = true
*.mecHost*.maxMECApps = 1000					# max ME Apps to instantiate
*.mecHost*.maxRam = 16GB					# max KBytes of Ram 
*.mecHost*.maxDisk = 10TB					# max KBytes of Disk Space
*.mecHost*.maxCpuSpeed = 50000	            # max CPU

*.mecHost*.vim.scheduling = ${"fair"}	

*.mecHost1.bsList = "gnb1"
*.mecHost2.bsList = "gnb2"
*.mecHost3.bsList = "gnb3"
*.mecHost4.bsList = "gnb4"
*.mecHost5.bsList = "gnb5"
*.mecHost6.bsList = "gnb6" 

*.gnb*.gateway = "upf"

# RAVENS Controller Configurations
*.server.numApps = 1
*.server.app[0].typename = "RavensControllerApp"
*.server.app[0].localPort = 5001

*.mecHost1.mecPlatform.numMecServices = 1
*.mecHost1.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost1.mecPlatform.mecService[0].localAddress = "mecHost1.virtualisationInfrastructure" 
*.mecHost1.mecPlatform.mecService[0].localPort = 10020
*.mecHost1.mecPlatform.serviceRegistry.localAddress = "mecHost1.virtualisationInfrastructure" 
*.mecHost1.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost2.mecPlatform.numMecServices = 1
*.mecHost2.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost2.mecPlatform.mecService[0].localAddress = "mecHost2.virtualisationInfrastructure" 
*.mecHost2.mecPlatform.mecService[0].localPort = 10020
*.mecHost2.mecPlatform.serviceRegistry.localAddress = "mecHost2.virtualisationInfrastructure" 
*.mecHost2.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost3.mecPlatform.numMecServices = 1
*.mecHost3.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost3.mecPlatform.mecService[0].localAddress = "mecHost3.virtualisationInfrastructure"
*.mecHost3.mecPlatform.mecService[0].localPort = 10020
*.mecHost3.mecPlatform.serviceRegistry.localAddress = "mecHost3.virtualisationInfrastructure" 
*.mecHost3.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost4.mecPlatform.numMecServices = 1
*.mecHost4.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost4.mecPlatform.mecService[0].localAddress = "mecHost4.virtualisationInfrastructure"
*.mecHost4.mecPlatform.mecService[0].localPort = 10020
*.mecHost4.mecPlatform.serviceRegistry.localAddress = "mecHost4.virtualisationInfrastructure" 
*.mecHost4.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost5.mecPlatform.numMecServices = 1
*.mecHost5.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost5.mecPlatform.mecService[0].localAddress = "mecHost5.virtualisationInfrastructure"
*.mecHost5.mecPlatform.mecService[0].localPort = 10020
*.mecHost5.mecPlatform.serviceRegistry.localAddress = "mecHost5.virtualisationInfrastructure" 
*.mecHost5.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost6.mecPlatform.numMecServices = 1
*.mecHost6.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost6.mecPlatform.mecService[0].localAddress = "mecHost6.virtualisationInfrastructure"
*.mecHost6.mecPlatform.mecService[0].localPort = 10020
*.mecHost6.mecPlatform.serviceRegistry.localAddress = "mecHost6.virtualisationInfrastructure"
*.mecHost6.mecPlatform.serviceRegistry.localPort = 10021

# RNG Configurations
*.mecHost*.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.mecHost*.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
*.mecHost*.mecPlatform.mecService[0].rng-0 = 2 # request service time
*.mecHost*.mecPlatform.mecService[0].rng-1 = 3 # subscription service time
*.mecHost*.mecPlatform.mecService[0].requestServiceTime = 4us
*.mecHost*.mecPlatform.mecService[0].subscriptionServiceTime = 11us

# RAVENS Agent Configurations
**.numIndependentMecApp = 1

*.mecHost*.independentMecApp[0].typename = "RavensAgentApp"

*.mecHost1.independentMecApp[0].mp1Address= "mecHost1.virtualisationInfrastructure"
*.mecHost2.independentMecApp[0].mp1Address= "mecHost2.virtualisationInfrastructure"
*.mecHost3.independentMecApp[0].mp1Address= "mecHost3.virtualisationInfrastructure"
*.mecHost4.independentMecApp[0].mp1Address= "mecHost4.virtualisationInfrastructure"
*.mecHost5.independentMecApp[0].mp1Address= "mecHost5.virtualisationInfrastructure"
*.mecHost6.independentMecApp[0].mp1Address= "mecHost6.virtualisationInfrastructure"

*.mecHost*.independentMecApp[0].mp1Port = 10021

**.mecHost*.independentMecApp[0].requiredRam = 2GB
**.mecHost*.independentMecApp[0].requiredDisk = 2GB
**.mecHost*.independentMecApp[0].requiredCpu = 10000

*.mecHost*.independentMecApp[0].controllerAddress = "server"
*.mecHost*.independentMecApp[0].controllerPort = 5001

# ---------------------------- Full Architecture ----------------------------
# Configuration implementing the complete MEC architecture - MEC Apps are instantiated on the MEC Hosts, managed by a MEO.

# App Layer
*.car[*].numApps = 2
*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/ResponseApp.json"

*.car[*].app[1].typename = "UEPerfApp"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].startTime = 0s
*.car[*].app[1].stopTime = 3600s

*.car[*].app[1].controllerAddress = "server"
*.car[*].app[1].controllerPort = 5001

# MEC Orchestrator configuration
*.mecOrchestrator.mecHostList = "mecHost1, mecHost2, mecHost3, mecHost4, mecHost5, mecHost6"              # MEC hosts associated to the MEC system
*.mecOrchestrator.mecApplicationPackageList = "ResponseApp"   # List of MEC app descriptors to be onboarded at 
*.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator" # the MECPM needs to know the MEC orchestrator
